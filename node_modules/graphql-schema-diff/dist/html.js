"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createHtmlOutput = void 0;
const path_1 = __importDefault(require("path"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const htmlTemplate = (diff) => `<html>
<head>
  <title>GraphQL Schema Diff</title>
  <meta charset="utf-8" />
  <link rel="stylesheet" href="css/hljs.min.css">
  <link rel="stylesheet" href="css/diff2html.min.css">
  <script src="js/highlight.min.js"></script>
  <script src="js/graphql.min.js"></script>
  <script src="js/diff2html.min.js"></script>
  <script src="js/diff2html-ui-base.min.js "></script>
</head>
<body>
  <div id="diff"></div>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const diffString = \`${diff}\`;
      const targetElement = document.getElementById('diff');
      const configuration = {
        matching: 'lines',
        outputFormat: 'side-by-side',
        highlight: true,
        synchronisedScroll: false,
        drawFileList: false,
        rawTemplates: {
          'tag-file-renamed': '',
        }
      };
      const diff2htmlUi = new Diff2HtmlUI(targetElement, diffString, configuration, hljs);
      diff2htmlUi.draw();
    });
  </script>
</body>
</html>`;
async function createHtmlOutput(diff, options = {}) {
    const { outputDirectory = "schemaDiff" } = options;
    const adjustedDiff = diff
        .replace(/(---\s.*)\sremoved/, "$1")
        .replace(/(\+\+\+\s.*)\sadded/, "$1")
        .replace("No newline at end of file", "");
    await fs_extra_1.default.ensureDir(outputDirectory);
    const diff2HtmlPath = path_1.default.dirname(require.resolve("diff2html/package.json"));
    const highlightJsPath = path_1.default.dirname(require.resolve("@highlightjs/cdn-assets/package.json"));
    await Promise.all([
        fs_extra_1.default.copy(path_1.default.join(diff2HtmlPath, "bundles/js/diff2html.min.js"), path_1.default.join(outputDirectory, "js/diff2html.min.js")),
        fs_extra_1.default.copy(path_1.default.join(diff2HtmlPath, "bundles/css/diff2html.min.css"), path_1.default.join(outputDirectory, "css/diff2html.min.css")),
        fs_extra_1.default.copy(path_1.default.join(highlightJsPath, "styles/default.min.css"), path_1.default.join(outputDirectory, "css/hljs.min.css")),
        fs_extra_1.default.copy(path_1.default.join(highlightJsPath, "highlight.min.js"), path_1.default.join(outputDirectory, "js/highlight.min.js")),
        fs_extra_1.default.copy(path_1.default.join(highlightJsPath, "languages/graphql.min.js"), path_1.default.join(outputDirectory, "js/graphql.min.js")),
    ]);
    const diff2htmlUiBase = (await fs_extra_1.default.readFile(path_1.default.join(diff2HtmlPath, "bundles/js/diff2html-ui-base.min.js")))
        .toString()
        // Hacky way to force GraphQL syntax highlighting
        .replace('void 0!==t?t:"plaintext"', '"graphql"');
    const htmlOutput = htmlTemplate(adjustedDiff);
    await Promise.all([
        fs_extra_1.default.writeFile(path_1.default.join(outputDirectory, "index.html"), htmlOutput),
        fs_extra_1.default.writeFile(path_1.default.join(outputDirectory, "js/diff2html-ui-base.min.js"), diff2htmlUiBase),
    ]);
}
exports.createHtmlOutput = createHtmlOutput;
